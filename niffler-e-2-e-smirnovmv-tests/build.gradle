plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'guru.qa'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0",
    junitVersion = "5.9.2",
    aspectjWeaverVersion = "1.9.19",
    slf4jVersion = "2.0.6",
    selenideVersion = "6.12.2",
    jacksonVersion = "2.14.2",
    ownerVersion = "1.0.12",
    retrofitVersion = "2.9.0",
    okhttpLoggingInterceptorVersion = "4.10.0",
    jsonpathVersion = "2.7.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
dependencies {
    testImplementation(
            "com.squareup.retrofit2:retrofit:$retrofitVersion",
            "com.squareup.retrofit2:converter-jackson:$retrofitVersion",
            "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-okhttp3:$allureVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.jayway.jsonpath:json-path:$jsonpathVersion"
    )
    testImplementation("io.qameta.allure:allure-junit5:$allureVersion") {
        exclude group: "org.junit.jupiter-api"
        exclude group: "org.junit.platform"
        exclude group: "org.junit.jupiter"
    }
}

test {
    useJUnitPlatform()
}